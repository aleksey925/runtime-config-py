name: test

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'master'

env:
  POETRY_VERSION: "1.2.2"
  MIN_COVERAGE: "99"

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION python3
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --all-extras
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run lint
        run: poetry run pre-commit run --all

  test:
    permissions:
      checks: write
      pull-requests: write
      contents: write
    strategy:
      matrix:
        py_version: [ "3.8", "3.9", "3.10", "3.11" ]
        os: [ ubuntu-22.04 ]
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.py_version }}"
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=$POETRY_VERSION python3
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --all-extras
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run tests
        run: poetry run pytest --cov="runtime_config" .
      - name: Generate report
        run: coverage xml && coverage json
      - name: Check coverage
        run: |
          TOTAL_COVERAGE=$(python -c "import json; print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          if [[ "$TOTAL_COVERAGE" -lt "$MIN_COVERAGE" ]]; then
            echo "Too low code coverage!"
            exit 1;
          fi
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-22.04' && matrix.py_version == '3.8'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
